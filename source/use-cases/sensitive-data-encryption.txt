=========================
Sensitive Data Encryption
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Introduction
------------

Cras sed rutrum nisi, vitae tristique risus. Aliquam erat volutpat.
Donec auctor nisl eget ornare accumsan. Pellentesque lectus tortor,
consectetur molestie pellentesque ac, blandit non libero.

Problem
~~~~~~~

Pellentesque non mi et est congue mattis pretium sit amet mi. Praesent
nec tortor nec arcu molestie dapibus. Phasellus at nunc ut quam molestie
finibus. Suspendisse finibus lectus eget nulla eleifend, vel consequat
leo rhoncus. Phasellus lacinia tortor id aliquet condimentum. Morbi
sodales est a leo rhoncus, non pretium neque dignissim.

Solution
~~~~~~~~

Praesent sit amet elit pretium mi molestie porta a sit amet ipsum. Sed
sollicitudin purus et mi blandit sodales.

- Deterministic vs Non-Deterministic

Procedure
---------

Requirements
~~~~~~~~~~~~


MongoDB Server Enterprise (version 4.2 or later)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Install MongoDB Enterprise for your operating system.
https://docs.mongodb.com/manual/installation/#mongodb-enterprise-edition-installation-tutorials



Run mongocryptd
Attempt to connect to mongocryptd to ensure that it is running
$ mongo mongodb://%2Ftmp%2Fmongocryptd.sock/




- MongoDB driver compatible with CSFLE (table?) https://docs.mongodb.com/manual/core/security-client-side-encryption/#driver-compatibility-table
- mongocryptd installed and running (how to word this?)
- (are there any other requirements? libraries?)
- TODO

A. Create a Local Master Key
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Aenean eu consequat lorem. Ut posuere est sed sodales pharetra. Cras
volutpat, massa laoreet varius dictum, leo odio porttitor ante, nec
auctor tortor orci et mi. Maecenas tempor, lacus vehicula molestie
pulvinar, ante eros faucibus odio, sed consequat quam tellus vel arcu.
Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere
cubilia Curae; Nunc non interdum purus, ultricies laoreet tortor.

A1. Create Data Encryption Keys
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Next, generate the data encryption keys that will be used to encrypt/decrypt the sensitive fields. 

As described in the Deterministic vs Random section, there are two encryption algorithms that you can specify for the data keys:

- Deterministic: ``AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic``
- Random: ``AEAD_AES_256_CBC_HMAC_SHA_512-Random``

For this scenario, we will generate one of each type to demonstrate the differences between them.

For this step, since the driver manages the entire lifecycle of generation, encryption, and insertion of the data keys into a user-specified collection, the connection string and master key need to be provided.


In the following code snippet, we create one of each type in database "data" and collection called "datakeys" 
In order to encrypt or decrypt the fields, the client must have read/write access to this database and collection.

1) Read in the local master key and specify the settings for a local master key

        Map<String, Map<String, Object>> kmsProviders = new HashMap<String, Map<String, Object>>() {{
           put("local", new HashMap<String, Object>() {{
               put("key", localMasterKey);
           }});
        }};

2) specify the database and collection name

        String keyVaultNamespace = "mykeys.datakeys";

3) specify key vault and connection settings for a ClientEncryption object 
        ClientEncryptionSettings clientEncryptionSettings = ClientEncryptionSettings.builder()
                .keyVaultMongoClientSettings(MongoClientSettings.builder()
                        .applyConnectionString(new ConnectionString("mongodb://localhost"))
                        .build())
                .keyVaultNamespace(keyVaultNamespace)
                .kmsProviders(kmsProviders)
                .build();

        ClientEncryption clientEncryption = ClientEncryptions.create(clientEncryptionSettings);
        BsonBinary dataKeyId = clientEncryption.createDataKey("local", new DataKeyOptions());

4) Convert encrypted data key to string
        final String base64DataKeyId = Base64.getEncoder().encodeToString(dataKeyId.getData());










B. Define a JSON Schema
~~~~~~~~~~~~~~~~~~~~~~~

Proin non mi a felis luctus vulputate nec pharetra odio. Ut pretium
scelerisque nulla, sed euismod nisi pellentesque sit amet. Proin mollis
mauris eu libero ullamcorper rutrum. Pellentesque vitae enim sed magna
accumsan maximus et quis mi. Ut vel laoreet turpis. Vivamus vitae odio
sed arcu finibus pretium vel maximus nisi. Nullam gravida consequat
porta.

C. Configure the MongoDB Client
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Donec sem felis, iaculis id pharetra sed, sollicitudin ut nisl.
Suspendisse commodo sagittis ante in ullamcorper. Etiam viverra
pellentesque suscipit. Pellentesque interdum egestas libero, ut varius
velit congue vel.

D. Perform Encrypted Read/Write Operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Etiam hendrerit posuere justo, ac hendrerit lorem pellentesque sed.
Fusce ullamcorper neque eu libero aliquam, sed placerat sapien cursus.
Vestibulum maximus magna sed velit feugiat tempor.

Ut accumsan pellentesque metus, at porta felis dapibus vulputate. Aenean
malesuada interdum libero in feugiat. Fusce pharetra massa eget leo
varius, et gravida massa tempus.

Ut mattis eros elit, sed ultrices purus lacinia sed. Curabitur tincidunt
tellus eget neque porta dictum ac vel orci. Vestibulum ante ipsum primis
in faucibus orci luctus et ultrices posuere cubilia Curae.

Praesent feugiat arcu non risus elementum eleifend. Nullam sed iaculis
erat.

E. Convert to a Remote Master Key
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Fusce porta lectus et enim vehicula malesuada. In porttitor ipsum eu
dictum congue. Fusce pharetra sagittis lacus sed posuere. Donec porta
posuere gravida. Quisque nisi massa, condimentum vitae ligula eget,
fringilla malesuada quam. Mauris in semper nulla, non blandit tortor.
Mauris consequat eget urna at eleifend. Suspendisse potenti. Fusce at
justo malesuada, finibus felis non, dignissim nisl. Ut blandit nulla sit
amet massa euismod vehicula.

Summary
-------

- What we wanted to do
- What we did
- More reading
